/**/#include <Servo.h> Servo servo;  // create servo object to control a servo int pos = 90;    // variable to store the servo positionint distance_dangerous = 150; // about 50cmint distance_ahead;int pinSensor = A0;const int echopin = 6;const int trigpin = 5;long duration;long distance;int maximumRange = 200;int minimumRange = 0;void setup() {   servo.attach(8);  // attaches the servo on pin 8 to the servo object   // quadruple half-H bridge SN754410NE  // always enabled -> 1,2EN & 3,4EN connected to high level   // motor 1: pins 9 & 10 (outputs 1A i 2A)  // motor 2: pins 11 & 12 (outputs 3A i 4A)  pinMode(9, OUTPUT);  pinMode(10, OUTPUT);  pinMode(11, OUTPUT);  pinMode(12, OUTPUT);  pinMode(trigpin, OUTPUT);  pinMode(echopin, INPUT);  pinMode(LED_BUILTIN, OUTPUT);    Serial.begin(9600);}void robot_stop(){//  Serial.println("STOP");  // motor 1 stop  digitalWrite(9, LOW);  digitalWrite(10, LOW);  // motor 2 stop   digitalWrite(11, LOW);  digitalWrite(12, LOW);}void robot_forward(){//  Serial.println("FORWARD");    // motor 1 forward  digitalWrite(9, HIGH);  digitalWrite(10, LOW);  // motor 2 forward  digitalWrite(11, HIGH);  digitalWrite(12, LOW);}void turn_left(){//  Serial.println("LEFT");    // motor 1 stop  digitalWrite(9, LOW);  digitalWrite(10, LOW);  // motor 2 forward   digitalWrite(11, HIGH);  digitalWrite(12, LOW);  delay (600);  //adjust!!!!   // motor 2 stop   digitalWrite(11, LOW);  digitalWrite(12, LOW);  }void turn_right(){//  Serial.println("RIGHT");    // motor 1 forward  digitalWrite(9, HIGH);  digitalWrite(10, LOW);  // motor 2 stop   digitalWrite(11, LOW);  digitalWrite(12, LOW);  delay (600); //adjust!!!!  // motor 1 stop   digitalWrite(9, LOW);  digitalWrite(10, LOW);  }int distance_left(){  servo.write(20);  // from 90º to 20º:looks to the left  delay (200);  int dist_left = analogRead(pinSensor); // note the distance  servo.write(90); //back to 90º  delay (200);  return dist_left;}int distance_right(){  servo.write(160); // from 90º to 160º:looks to the right  delay (200);  int dist_right = analogRead (pinSensor); // note the distance  servo.write(90); // back to 90º  delay (200);  return dist_right;}void loop() {  digitalWrite(trigpin, LOW);  delayMicroseconds(2);  digitalWrite(trigpin, HIGH); delayMicroseconds(10);   digitalWrite(trigpin, LOW); duration = pulseIn(echopin, HIGH);   if (distance >= maximumRange || distance <= minimumRange){ /* Send a negative number to computer and Turn LED ON  to indicate "out of range" */ //Serial.println("-1"); digitalWrite(LED_BUILTIN, HIGH); robot_forward(); } else { /* Send the distance to the computer using Serial protocol, and turn LED OFF to indicate successful reading. */ //Serial.println(distance); digitalWrite(LED_BUILTIN, LOW); robot_stop(); }  //Delay 50ms before next reading. delay(0);  //Calculate the distance (in cm) based on the speed of sound. distance = duration/58.2;//  servo.write(90);   // looks forward//  delay (200);//  distance_ahead = analogRead (pinSensor);//  Serial.println("distance ahead");//  Serial.println(distance_ahead);//  delay (1000);//  if (distance_ahead > distance_dangerous) // bigger distance lesser output from sensor!!!//  {//    robot_stop();//    if (distance_right() > distance_left()) turn_left(); else turn_right();//  }//  else robot_forward();}